# Multi-stage build otimizado para GCP e2-micro (512MB RAM)
FROM python:3.11-slim as builder

# Otimizações para build
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Instalar dependências de build (mínimas)
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Copiar e instalar requirements
COPY requirements.txt .
RUN pip install --user --no-warn-script-location -r requirements.txt

# Estágio final - imagem mínima
FROM python:3.11-slim

# Labels para organização
LABEL maintainer="analise-cartao"
LABEL description="Analisador de PDFs otimizado para GCP e2-micro"

# Variáveis de ambiente otimizadas para produção e pouca memória
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app
ENV FLASK_APP=app_secure.py
ENV FLASK_ENV=production

# Otimizações Python para pouca memória
ENV PYTHONMALLOC=malloc
ENV MALLOC_MMAP_THRESHOLD_=131072
ENV MALLOC_TRIM_THRESHOLD_=131072
ENV MALLOC_TOP_PAD_=131072
ENV MALLOC_MMAP_MAX_=65536

# Instalar apenas dependências runtime essenciais
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && rm -rf /tmp/* /var/tmp/*

# Criar usuário não-root para segurança
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Criar estrutura de diretórios
RUN mkdir -p /app/uploads /app/logs /app/ssl \
    && chown -R appuser:appuser /app

# Definir diretório de trabalho
WORKDIR /app

# Copiar dependências Python do builder
COPY --from=builder /root/.local /home/appuser/.local

# Copiar código da aplicação
COPY --chown=appuser:appuser . .

# Garantir permissões corretas
RUN chown -R appuser:appuser /app

# Mudar para usuário não-root
USER appuser

# Adicionar local bin ao PATH
ENV PATH=/home/appuser/.local/bin:$PATH

# Expor porta
EXPOSE 5000

# Health check otimizado para e2-micro
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:5000/auth/login || exit 1

# Comando otimizado para e2-micro
# 1 worker + 2 threads = máximo 3 requests simultâneas (adequado para 512MB RAM)
CMD ["gunicorn", \
     "--bind", "0.0.0.0:5000", \
     "--workers", "1", \
     "--threads", "2", \
     "--worker-class", "gthread", \
     "--worker-connections", "100", \
     "--timeout", "120", \
     "--keep-alive", "2", \
     "--max-requests", "500", \
     "--max-requests-jitter", "50", \
     "--preload", \
     "--log-level", "info", \
     "--access-logfile", "-", \
     "--error-logfile", "-", \
     "app_secure:app"]