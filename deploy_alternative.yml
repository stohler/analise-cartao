# Alternativa para deploy sem rsync - use apenas se necessÃ¡rio
# Substitua o step "ðŸ“¤ Enviar cÃ³digo atualizado" por este:

    - name: ðŸ“¤ Enviar cÃ³digo atualizado (alternativa sem rsync)
      run: |
        echo "ðŸ“¤ Enviando arquivos..."
        
        # Criar arquivo temporÃ¡rio compactado excluindo arquivos desnecessÃ¡rios
        echo "ðŸ“¦ Preparando arquivos para envio..."
        tar --exclude='.git' \
            --exclude='.github' \
            --exclude='__pycache__' \
            --exclude='*.pyc' \
            --exclude='.env' \
            --exclude='users.json' \
            --exclude='uploads' \
            --exclude='logs' \
            --exclude='backups' \
            --exclude='.pytest_cache' \
            --exclude='node_modules' \
            --exclude='venv*' \
            -czf deploy_package.tar.gz .
        
        # Enviar arquivo compactado
        echo "ðŸš€ Enviando pacote..."
        scp -i ~/.ssh/gcp_deploy -o StrictHostKeyChecking=no \
            deploy_package.tar.gz \
            ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_IP }}:/tmp/
        
        # Extrair no servidor
        echo "ðŸ“‚ Extraindo arquivos na VM..."
        ssh -i ~/.ssh/gcp_deploy ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_IP }} "
          cd /home/gcp-user/analise-cartao
          
          # Fazer backup dos arquivos importantes antes de extrair
          mkdir -p temp_backup
          [ -f .env ] && cp .env temp_backup/
          [ -f users.json ] && cp users.json temp_backup/
          [ -d uploads ] && cp -r uploads temp_backup/ 2>/dev/null || true
          
          # Limpar diretÃ³rio atual (exceto backups e arquivos importantes)
          find . -maxdepth 1 -type f ! -name '.env' ! -name 'users.json' -delete 2>/dev/null || true
          find . -maxdepth 1 -type d ! -name '.' ! -name 'uploads' ! -name 'logs' ! -name 'backups' ! -name 'ssl' ! -name 'temp_backup' -exec rm -rf {} + 2>/dev/null || true
          
          # Extrair novos arquivos
          tar -xzf /tmp/deploy_package.tar.gz
          
          # Restaurar arquivos importantes
          [ -f temp_backup/.env ] && cp temp_backup/.env .
          [ -f temp_backup/users.json ] && cp temp_backup/users.json .
          [ -d temp_backup/uploads ] && cp -r temp_backup/uploads . 2>/dev/null || true
          
          # Limpar
          rm -rf temp_backup /tmp/deploy_package.tar.gz
          
          echo 'âœ… Arquivos extraÃ­dos e configurados'
        "
        
        # Remover arquivo temporÃ¡rio local
        rm -f deploy_package.tar.gz
        
        echo "âœ… Arquivos enviados"